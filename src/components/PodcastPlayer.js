// src/components/PodcastPlayer.js
import React, { useState } from 'react';
import Modal from 'react-modal';
import { FaFacebook, FaTwitter, FaEnvelope } from 'react-icons/fa';
import StarRating from './StarRating';
import {
  FacebookShareButton,
  TwitterShareButton,
  EmailShareButton,
} from 'react-share';

Modal.setAppElement('#root');

function PodcastPlayer({ podcast }) {
  const [modalIsOpen, setModalIsOpen] = useState(false);
  const [hasPlayed, setHasPlayed] = useState(false);

  const handlePlay = () => {
    if (!hasPlayed) {
      setModalIsOpen(true);
      setHasPlayed(true);
    }
  };

  const closeModal = () => {
    setModalIsOpen(false);
  };

  return (
    <div className="podcast-player">
      <img src={podcast.imageUrl} alt={podcast.title} />
      <h3>{podcast.title}</h3>
      <p>{podcast.description}</p>
      <audio controls onPlay={handlePlay}>
        <source src={podcast.audioUrl} type="audio/mp3" />
        Your browser does not support the audio element.
      </audio>

      <div className="podcast-stats">
        <span>Views: {podcast.views}</span>
        <span>Likes: {podcast.likes}</span>
      </div>

      <StarRating ratings={podcast.ratings} />

      <div className="share-buttons">
        <FacebookShareButton url={window.location.href}>
          <FaFacebook />
        </FacebookShareButton>
        <TwitterShareButton url={window.location.href}>
          <FaTwitter />
        </TwitterShareButton>
        <EmailShareButton url={window.location.href}>
          <FaEnvelope />
        </EmailShareButton>
      </div>

      <Modal
        isOpen={modalIsOpen}
        onRequestClose={closeModal}
        contentLabel="Alert"
        className="modal"
        overlayClassName="overlay"
      >
        <h2>Notice</h2>
        <p>
          This is generated by AI and the topics are from internet search engine
          sources. There might be false and misinformation.
        </p>
        <button onClick={closeModal}>Close</button>
      </Modal>
    </div>
  );
}

export default PodcastPlayer;
